on:
  workflow_dispatch: {}
  pull_request: {}
  push:
    branches:
    - main
    - master
    paths:
    - .github/workflows/semgrep.yml
  schedule:
  # random HH:MM to avoid a load spike on GitHub Actions at 00:00
  - cron: 32 1 * * *

env:
  RELEASE_REVISION: "pr-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }}"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
  KUBE_NAMESPACE: production
  ECR_REPOSITORY: my-cool-application

name: Semgrep
jobs:
  semgrep:
    name: semgrep/ci
    runs-on: ubuntu-20.04
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    container:
      image: returntocorp/semgrep
    steps:
    - uses: actions/checkout@v3
    - run: semgrep ci 
    - run: semgrep ci --supply-chain

  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.4'

      - name: Build
        run: go build -v ./...

      # - name: Test
      #   run: go test -v ./...

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: aklaas2/vault-go-demo-oauth:latest

  deploy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Install kubectl
        run: |
          sudo apt-get update && sudo apt-get install -y ca-certificates curl apt-transport-https
          curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg
          echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubectl
          
      - name: Configure kubectl
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > kubeconfig.yaml
          
      - name: Deploy to EKS
        env:
          IMAGE_TAG: latest
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
         export KUBECONFIG=kubeconfig.yaml
         kubectl config use-context-us-east-1
         kubectl apply -f demo/new_vault-go-demo/
  